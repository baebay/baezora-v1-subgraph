type Media @entity {
  id: ID!
  owner: User!
  creator: User!
  prevOwner: User!
  approved: User

  contentHash: Bytes!
  metadataHash: Bytes!
  contentURI: String!
  metadataURI: String!

  ownerBidShare: BigInt!
  creatorBidShare: BigInt!
  prevOwnerBidShare: BigInt!

  createdAtTimestamp: BigInt!
  createdAtBlockNumber: BigInt!

  burnedAtTimeStamp: BigInt
  burnedAtBlockNumber: BigInt

  currentAsk: Ask @derivedFrom(field: "media")
  currentBids: [Bid!] @derivedFrom(field: "media")

  inactiveAsks: [InactiveAsk!] @derivedFrom(field: "media")
  inactiveBids: [InactiveBid!] @derivedFrom(field: "media")
}

type User @entity {
  id: ID!
  authorizedUsers: [User!]
  collection: [Media!]! @derivedFrom(field: "owner")
  creations: [Media!]! @derivedFrom(field: "creator")
  currentBids: [Bid!] @derivedFrom(field: "bidder")
}

type Ask @entity {
  id: ID!
  media: Media!
  amount: BigInt!
  currency: Currency!
  owner: User!

  createdAtTimestamp: BigInt!
  createdAtBlockNumber: BigInt!
}

type Bid @entity {
  id: ID!
  media: Media!
  amount: BigInt!
  currency: Currency!
  sellOnShare: BigInt!
  bidder: User!
  recipient: User!

  createdAtTimestamp: BigInt!
  createdAtBlockNumber: BigInt!
}

enum MarketEventType {
  Finalized
  Removed
}

type InactiveBid @entity {
  id: ID!
  media: Media!
  type: MarketEventType!
  amount: BigInt!
  currency: Currency!
  sellOnShare: BigInt!
  bidder: User!
  recipient: User!

  createdAtTimestamp: BigInt!
  createdAtBlockNumber: BigInt!
}

type InactiveAsk @entity {
  id: ID!
  media: Media!
  type: MarketEventType!
  amount: BigInt!
  currency: Currency!
  owner: User!

  createdAtTimestamp: BigInt!
  createdAtBlockNumber: BigInt!
}

type Currency @entity {
  # address
  id: ID!

  # name
  name: String!

  # symbol
  symbol: String!

  # decimals
  decimals: Int

  # total liquidity across bids of all media
  liquidity: BigInt!

  activeBids: [Bid!] @derivedFrom(field: "currency")
  activeAsks: [Ask!] @derivedFrom(field: "currency")
  inactiveBids: [InactiveBid!] @derivedFrom(field: "currency")
  inactiveAsks: [InactiveAsk!] @derivedFrom(field: "currency")
}

type Transfer @entity {
    id: ID!

    media: Media!
    from: User!
    to: User!

    createdAtTimestamp: BigInt!
    createdAtBlockNumber: BigInt!
}



